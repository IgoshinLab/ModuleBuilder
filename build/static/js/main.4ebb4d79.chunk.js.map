{"version":3,"sources":["components/builder/show.js","components/builder/blocks/conv.js","components/builder/interface.js","components/builder/landing.js","App.js","serviceWorker.js","components/reducer/block-params.js","components/reducer/actions.js","index.js","components/reducer/reducer.js"],"names":["Show","props","handleSubmit","event","preventDefault","user","username","state","password","presentParams","block","parent_names","type","Object","keys","params","map","key","name","className","concat","onClick","handleManipulate","hasOwnProperty","Array","item","onChange","setState","target","value","index","bind","this","nets","input","React","Component","Conv","addAnItem","console","log","newList","push","changeAnItem","newInput","deleteAnItem","splice","changeAParam","newParam","param","content","length","alert","flag","onSubmit","htmlFor","id","placeholder","Interface","receivedText","e","lines","result","rst","JSON","parse","loadNets","handleFiles","file","files","fr","FileReader","onload","readAsText","saveHandler","stringify","blob","Blob","require","saveAs","handleSelect","containerRef","ref","current","Landing","connect","dispatch","block_type","App","style","height","exact","path","component","Boolean","window","location","hostname","match","default_params","conv","num_in","num_out","kernel_size","stride","padding","dilation","bias","deconv","output_padding","linear","noise","AdaIN","const","img_size","reshape","depth","axis","normalization","activation","getBlockParams","allState","assign","editBlock","newState","i","updateDict","net","slice","updateDictParams","addBlock","allNets","newContent","indexOf","parseInt","content_elements","split","update_content","validContentParams","deleteKey","dict","key_list","deleteKeyParams","deleteBlock","store","createStore","E","action","compose","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAEaA,EAAb,kDAEI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAO,CACTC,SAAU,EAAKC,MAAMD,SACrBE,SAAU,EAAKD,MAAMC,UAEzB,EAAKP,MAAMC,aAAa,QAASG,IAhBlB,EAmBnBI,cAAgB,SAACC,EAAOC,GACpB,MAAkB,eAAfD,EAAME,KACE,+BACH,4BACI,qCACA,oCACA,oCACA,0CACA,oCACA,uCAEHC,OAAOC,KAAKJ,EAAMK,QAAQC,KAAI,SAACC,GAC5B,OAAO,4BACH,4BAAKA,GACL,4BAAKP,EAAMK,OAAOE,GAAKL,MACvB,4BAAKF,EAAMK,OAAOE,GAAKC,MACvB,wBAAIC,UAAU,cAAc,EAAKV,cAAcC,EAAMK,OAAOE,GAAMN,EAAaS,OAAOH,KACtF,4BAAI,4BAAQL,KAAK,SAASS,QAAS,EAAKC,iBAAiB,OAAOX,EAAaS,OAAOH,KAAhF,SACJ,4BAAI,4BAAQL,KAAK,SAASS,QAAS,EAAKC,iBAAiB,SAASX,EAAaS,OAAOH,KAAlF,gBAKbP,EAAMa,eAAe,UACbV,OAAOC,KAAKJ,EAAMK,QAAQC,KAAI,SAACC,GAClC,OAAGP,EAAMK,OAAOE,aAAgBO,MACrB,4BAAKP,EAAL,KAAYP,EAAMK,OAAOE,GAAKD,KAAI,SAACS,GACtC,OAAO,8BAAOA,EAAP,SAGJ,4BAAKR,EAAL,KAAYP,EAAMK,OAAOE,YAP5C,GA1CW,EAsDnBS,SAAW,SAACvB,GACRA,EAAMC,iBACN,EAAKuB,SAAL,eACKxB,EAAMyB,OAAOV,KAAOf,EAAMyB,OAAOC,SAzDvB,EA6DnBP,iBAAmB,SAACV,EAAMD,GAAP,OAAwB,SAACR,GACxCA,EAAMC,iBACN,EAAKH,MAAMqB,iBAAiBV,EAAMD,KA7DlC,EAAKJ,MAAQ,CACTuB,MAAO,GAEX,EAAKrB,cAAgB,EAAKA,cAAcsB,KAAnB,gBACrB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBAPL,EAFvB,qDAoEc,IAAD,OACL,OAAO,yBAAKZ,UAAU,WACd,yBAAKA,UAAU,UAAf,mBACA,yBAAKA,UAAU,SACVN,OAAOC,KAAKkB,KAAK/B,MAAMgC,MAAMjB,KAAI,SAACC,GAC/B,OAAO,6BACP,sCAAYA,GACR,4BAAQL,KAAK,SAASS,QAAS,EAAKC,iBAAiB,SAAU,CAACL,KAAhE,UACA,+BACI,4BACI,qCACA,oCACA,oCACA,qCACA,0CACA,oCACA,uCAEPJ,OAAOC,KAAK,EAAKb,MAAMgC,KAAKhB,IAAMD,KAAI,SAACc,GACxC,IAAMpB,EAAQ,EAAKT,MAAMgC,KAAKhB,GAAKa,GACnC,OAAO,4BACH,4BAAKA,GACL,4BAAKpB,EAAME,MACX,4BAAKF,EAAMQ,MACX,wBAAIC,UAAU,cAAcT,EAAMwB,MAAMlB,KAAI,SAACS,GACzC,OAAO,4BAAKA,OAEhB,wBAAIN,UAAU,cAAc,EAAKV,cAAcC,EAAO,CAACO,EAAKa,KAC5D,4BAAI,4BAAQlB,KAAK,SAASS,QAAS,EAAKC,iBAAiB,OAAO,CAACL,EAAKa,KAAlE,SACJ,4BAAI,4BAAQlB,KAAK,SAASS,QAAS,EAAKC,iBAAiB,SAAS,CAACL,EAAKa,KAApE,0BAjGpC,GAA0BK,IAAMC,WCCnBC,EAAb,kDAEI,WAAYpC,GAAQ,IAAD,uBACf,cAAMA,IAiCVqC,UAAY,SAACnC,GACTA,EAAMC,iBACNmC,QAAQC,IAAIrC,EAAMyB,OAAOV,MACzB,IAAIuB,EAAU,EAAKlC,MAAMJ,EAAMyB,OAAOV,MACtCuB,EAAQC,KAAK,KACb,EAAKf,SAAL,eACKxB,EAAMyB,OAAOV,KAAOuB,KAxCV,EA4CnBE,aAAe,SAACb,GAAD,OAAW,SAAC3B,GACvBA,EAAMC,iBACN,IAAIwC,EAAW,EAAKrC,MAAMJ,EAAMyB,OAAOV,MACvC0B,EAASd,GAAS3B,EAAMyB,OAAOC,MAC/B,EAAKF,SAAL,eACKxB,EAAMyB,OAAOV,KAAM0B,MAjDT,EAqDnBC,aAAe,SAAC1C,GACZA,EAAMC,iBACN,IAAIqC,EAAU,EAAKlC,MAAMJ,EAAMyB,OAAOV,MACtCuB,EAAQK,QAAQ,EAAE,GAClB,EAAKnB,SAAL,eACKxB,EAAMyB,OAAOV,KAAOuB,KA1DV,EA8DnBM,aAAe,SAAC5C,GACZA,EAAMC,iBACN,IAAI4C,EAAW,EAAKzC,MAAMQ,OAC1BiC,EAAS7C,EAAMyB,OAAOV,MAAQf,EAAMyB,OAAOC,MAC3C,EAAKF,SAAS,CACVsB,MAAOD,KAnEI,EAuEnB9C,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAM8C,EAAU,CACZtC,KAAM,EAAKL,MAAMK,KACjBM,KAAM,EAAKX,MAAMW,KACjBgB,MAAO,EAAK3B,MAAM2B,MAClBnB,OAAQ,EAAKR,MAAMQ,QAEvB,GAAG,EAAKR,MAAMI,aAAawC,OAAS,EAIhC,OAHA,EAAKxB,SAAS,CACVyB,MAAO,uCAEJ,EAEP,EAAKzB,SAAS,CACVyB,MAAO,KAEf,IAAIzC,EAAe,EAAKJ,MAAMI,aAC1B0C,EAAO,EACPpB,EAAO,EAAKhC,MAAMgC,KACtB,IAAI,IAAIhB,KAAOgB,EACRA,EAAKV,eAAeN,IAChBgB,EAAKhB,GAAL,OAAsBiC,EAAQhC,OAAMmC,EAAO,GAG1C,IAATA,EACC,EAAK1B,SAAS,CAACyB,MAAO,qBAEtB,EAAKnD,MAAMC,aAAa,YAAaS,EAAcuC,IAnGxC,EAuGnBxB,SAAW,SAACvB,GACRA,EAAMC,iBACNmC,QAAQC,IAAIrC,EAAMyB,OAAOV,MACzB,EAAKS,SAAL,eACKxB,EAAMyB,OAAOV,KAAOf,EAAMyB,OAAOC,SAzGtC,IAAId,EAAS,GAFE,OAGZ,EAAKd,MAAMsB,eAAe,WACzBV,OAAOC,KAAK,EAAKb,MAAMc,QAAQC,KAAI,SAACC,GAChCF,EAAOE,GAAO,EAAKhB,MAAMc,OAAOE,GAAlB,SAGtB,EAAKV,MAAQ,CACTI,aAAc,EAAKV,MAAMU,aACzBC,KAAM,EAAKX,MAAMW,KACjBM,KAAM,EAAKjB,MAAMiB,KACjBgB,MAAO,EAAKjC,MAAMiC,MAClBnB,OAAQA,GAEZ,EAAKuB,UAAY,EAAKA,UAAUP,KAAf,gBACjB,EAAKY,aAAe,EAAKA,aAAaZ,KAAlB,gBACpB,EAAKc,aAAe,EAAKA,aAAad,KAAlB,gBACpB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBACpB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBApBL,EAFvB,gEA0ByB,IAAD,OACZhB,EAAS,GACViB,KAAK/B,MAAMsB,eAAe,WACzBV,OAAOC,KAAKkB,KAAK/B,MAAMc,QAAQC,KAAI,SAACC,GAChCF,EAAOE,GAAO,EAAKhB,MAAMc,OAAOE,GAAlB,SAGtBe,KAAKL,SAAS,CAACZ,OAAQA,MAjC/B,+BAiHc,IAAD,OACL,OAAO,yBAAKI,UAAU,WACd,0BAAMA,UAAU,OAAOmC,SAAUtB,KAAK9B,cAClC,+BAAQ8B,KAAK/B,MAAMW,MACnB,+BACA,wBAAIO,UAAU,cACV,4BAAI,2BAAOoC,QAAQ,QAAf,eACJ,4BAAI,2BAAO3C,KAAK,OAAOM,KAAK,OAAOsC,GAAG,OAAOC,YAAY,OAAO5B,MAAOG,KAAKzB,MAAMW,KAAMQ,SAAUM,KAAKN,aAE1GM,KAAKzB,MAAMI,aAAaK,KAAI,SAACa,EAAOC,GACjC,OAAO,wBAAIX,UAAU,cACjB,4BAAI,2BAAOoC,QAAQ,gBAAf,eAA2CzB,IAC/C,4BAAI,2BAAOlB,KAAK,OAAOM,KAAK,eAAeuC,YAAa5B,EACjDH,SAAU,EAAKiB,aAAab,UAG3C,4BACI,4BAAI,4BAAQlB,KAAK,SAASM,KAAK,eAAeG,QAASW,KAAKM,WAAxD,sBACJ,4BACKN,KAAKzB,MAAMI,aAAawC,OAAS,GAClC,4BAAQvC,KAAK,SAASM,KAAK,eAAeG,QAASW,KAAKa,cAAxD,0BAEPb,KAAKzB,MAAM2B,MAAMlB,KAAI,SAACa,EAAOC,GAC1B,OAAO,wBAAIX,UAAU,cACjB,4BAAI,2BAAOoC,QAAQ,SAAf,SAA8BzB,IAClC,4BAAI,2BAAOlB,KAAK,OAAOM,KAAK,QAAQuC,YAAa5B,EACtCH,SAAU,EAAKiB,aAAab,UAG/C,4BACI,4BAAI,4BAAQlB,KAAK,SAASM,KAAK,QAAQG,QAASW,KAAKM,WAAjD,iBACJ,4BAAKN,KAAKzB,MAAM2B,MAAMiB,OAAS,GAC/B,4BAAQvC,KAAK,SAASM,KAAK,QAAQG,QAASW,KAAKa,cAAjD,qBAEHb,KAAK/B,MAAMsB,eAAe,WAAaV,OAAOC,KAAKkB,KAAK/B,MAAMc,QAAQC,KAAI,SAACC,GACxE,MAAmC,WAAhC,EAAKhB,MAAMc,OAAOE,GAAKL,KACf,wBAAIO,UAAU,cACjB,4BAAI,2BAAOoC,QAAStC,GAAMA,IAC1B,4BAAI,4BAAQC,KAAMD,EAAKuC,GAAIvC,EAAKS,SAAU,EAAKqB,cAC1C,EAAK9C,MAAMc,OAAOE,GAAlB,MAAgCD,KAAI,SAACa,GAAD,OACjC,4BAAQA,MAAOA,GAAQA,SAM5B,wBAAIV,UAAU,cACjB,4BAAI,2BAAOoC,QAAStC,GAAMA,IAC1B,4BAAI,2BAAOL,KAAM,EAAKX,MAAMc,OAAOE,GAAKL,KAAMM,KAAMD,EAAKuC,GAAIvC,EAAKwC,YAAa,EAAKxD,MAAMc,OAAOE,GAAKY,MAAOA,MAAO,EAAKtB,MAAMQ,OAAOE,GAC/HS,SAAU,EAAKqB,qBAKlC,yBAAK5B,UAAU,UACX,4BAAQP,KAAK,SAASO,UAAU,MAAMqC,GAAG,aAAzC,UAGA,yBAAKrC,UAAU,SACVa,KAAKzB,MAAM6C,cA5KxC,GAA0BjB,IAAMC,WC0EjBsB,E,kDArEb,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAMN0D,aAAe,SAACC,GACd,IAAIC,EAAQD,EAAEhC,OAAOkC,OACjBC,EAAMC,KAAKC,MAAMJ,GACrB,EAAK5D,MAAMiE,SAASH,IAVL,EAanBI,YAAc,SAAChE,GACX,IAAIiE,EAAOjE,EAAMyB,OAAOyC,MAAM,GAC1BC,EAAK,IAAIC,WACbD,EAAGE,OAAS,EAAKb,aACjBW,EAAGG,WAAWL,IAjBC,EAoBnBM,YAAc,WACV,IAAIxB,EAAUc,KAAKW,UAAU,EAAK1E,MAAMgC,MACpC2C,EAAO,IAAIC,KAAK,CAAC3B,GAAU,CAACtC,KAAM,6BACtBkE,EAAQ,IACdC,OAAOH,EAAM,cAxBR,EA2BnBI,aAAe,SAAC7E,GACZA,EAAMC,iBACN,EAAKH,MAAM+E,aAAa7E,EAAMyB,OAAOC,QA3BvC,EAAKsC,YAAc,EAAKA,YAAYpC,KAAjB,gBACnB,EAAK2C,YAAc,EAAKA,YAAY3C,KAAjB,gBACnB,EAAKiD,aAAe,EAAKA,aAAajD,KAAlB,gBAJH,E,qDAgCT,IAAD,OACP,OACI,yBAAKZ,UAAU,qBAAf,wBAEE,yBAAKA,UAAU,WACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,iBAAUa,KAAK/B,MAAf,CAAsBgF,aAAc,SAACC,GAAD,OAAS,EAAKC,QAAUD,MAC5D,2BAAOtE,KAAK,OAAO4C,GAAG,QAAQtC,KAAK,OAAOQ,SAAUM,KAAKmC,cACzD,2BAAOvD,KAAK,SAAS4C,GAAG,SAAS3B,MAAM,OAAOR,QAASW,KAAK0C,eAEhE,yBAAKvD,UAAU,kBACX,yBAAKA,UAAU,WACX,4BAAQD,KAAK,OAAOQ,SAAUM,KAAKgD,cAC/B,4BAAQnD,MAAM,QAAd,eACA,4BAAQA,MAAM,UAAd,iBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,cAAd,gBAGR,kBAAC,EAAD,eAAMZ,IAAKe,KAAK/B,MAAMU,cACZqB,KAAK/B,MADf,CAEMgF,aAAc,SAACC,GAAD,OAAS,EAAKC,QAAUD,a,GA/DtC/C,IAAMC,W,QCH9B,SAAS6C,EAAaC,GAClBlD,KAAKmD,QAAUD,EAmDZ,IAAME,EAAUC,aA/CvB,SAAyB9E,GACrB,MAAO,CACHK,KAAML,EAAMK,KACZqB,KAAM1B,EAAM0B,KACZC,MAAO3B,EAAM2B,MACbvB,aAAcJ,EAAMI,aACpBO,KAAMX,EAAMW,KACZH,OAAQR,EAAMQ,WAKtB,SAA4BuE,GACxB,MAAO,CACHpF,aAAc,SAACU,EAAMD,EAAcuC,GAM/BoC,EALe,CACX1E,KAAMA,EACND,aAAcA,EACduC,QAASA,KAIjBgB,SAAU,SAAChB,GAKPoC,EAJe,CACX1E,KAAM,OACNsC,QAASA,KAIjB8B,aAAc,SAACO,GAKXD,EAJe,CACX1E,KAAM,SACN2E,WAAYA,KAIpBjE,iBAAkB,SAACV,EAAMD,GAKrB2E,EAJe,CACX1E,KAAMA,EACND,aAAcA,KAItBsE,aAAcA,KAICI,CAGrB3B,G,eC5Ba8B,E,uKAjBX,OACI,kBAAC,IAAD,KACE,yBAAKC,MAAO,CAACC,OAAO,SAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,W,GAP7BjD,IAAMC,WCEJ0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YClBOC,EAAiB,CAC1BC,KAAM,CACFC,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,GAChCyE,QAAS,CAAC1F,KAAM,SAAUiB,MAAO,GACjC0E,YAAa,CAAC3F,KAAM,OAAQiB,MAAO,GACnC2E,OAAQ,CAAC5F,KAAM,OAAQiB,MAAO,GAC9B4E,QAAS,CAAC7F,KAAM,OAAQiB,MAAO,GAC/B6E,SAAU,CAAC9F,KAAM,OAAQiB,MAAO,GAChC8E,KAAM,CAAC/F,KAAM,OAAQiB,MAAO,IAEhC+E,OAAQ,CACJP,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,GAChCyE,QAAS,CAAC1F,KAAM,SAAUiB,MAAO,GACjC0E,YAAa,CAAC3F,KAAM,OAAQiB,MAAO,GACnC2E,OAAQ,CAAC5F,KAAM,OAAQiB,MAAO,GAC9B4E,QAAS,CAAC7F,KAAM,OAAQiB,MAAO,GAC/B6E,SAAU,CAAC9F,KAAM,OAAQiB,MAAO,GAChCgF,eAAgB,CAACjG,KAAM,OAAQiB,MAAO,IAE1CiF,OAAQ,CACJT,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,GAChCyE,QAAS,CAAC1F,KAAM,SAAUiB,MAAO,IAErCkF,MAAO,CACHV,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,IAEpCmF,MAAO,CACHX,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,GAChCyE,QAAS,CAAC1F,KAAM,SAAUiB,MAAO,IAErCoF,MAAO,CACHZ,OAAQ,CAACzF,KAAM,SAAUiB,MAAO,GAChCqF,SAAU,CAACtG,KAAM,OAAQiB,MAAO,CAAC,EAAG,KAExCsF,QAAS,CACLC,MAAO,CAACxG,KAAM,OAAQiB,MAAO,EAAE,EAAG,EAAG,EAAG,KAE5CT,OAAQ,CACJiG,KAAM,CAACzG,KAAM,SAAUiB,MAAO,IAElCyF,cAAe,CACX1G,KAAM,CAACA,KAAM,SAAUiB,MAAO,CAAC,cAAe,eAElD0F,WAAY,CACR3G,KAAM,CAACA,KAAM,SAAUiB,MAAO,CAAC,YAAa,UAAW,WAIxD,SAAS2F,EAAejH,EAAOgF,GAClC,IAAIkC,EAAW5G,OAAO6G,OAAO,GAAInH,GAMjC,OALAkH,EAAS7G,KAAO2E,EACbY,EAAe5E,eAAegE,GAC7BkC,EAAS1G,OAASoF,EAAeZ,GAEjCkC,EAAS1G,OAAS,GACf0G,EAGJ,SAASE,EAAUpH,EAAOI,GAC7B,IAAIiH,EAAW/G,OAAO6G,OAAO,GAAInH,GAC7B2C,EAAU0E,EAAS3F,KACvB,GAAGtB,EAAawC,OAAS,EACrB,OAAOyE,EACX,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAG3E,EAAQ3B,eAAeZ,EAAakH,IAGnC,OAAOD,EAFP1E,EAAUA,EAAQvC,EAAakH,IAIvC,GAAGlH,EAAawC,OAAS,EACrB,IAAI,IAAI0E,EAAI,EAAGA,EAAIlH,EAAawC,OAAQ0E,IACjC3E,EAAQ3B,eAAe,WACnB2B,EAAQnC,OAAOQ,eAAeZ,EAAakH,MAC1C3E,EAAUA,EAAQnC,OAAOJ,EAAakH,KAEtD,IAAInH,EAAQ,CACR,MAASwC,EAAQ3B,eAAe,SAAW2B,EAAO,MAAY,GAC9D,aAAgBA,EAAQ3B,eAAe,gBAAkB2B,EAAO,aAAmBvC,EACnF,KAAQuC,EAAQ3B,eAAe,QAAU2B,EAAO,KAAW,KAc/D,OAZGA,EAAQ3B,eAAe,UACtBb,EAAME,KAAOsC,EAAQtC,MAClBsC,EAAQ3B,eAAe,YACtBb,EAAMK,OAAS,IACK,eAAjBmC,EAAQtC,MACPC,OAAOC,KAAKqF,EAAejD,EAAQtC,OAAOI,KAAI,SAACC,GAC3CP,EAAMK,OAAOE,GAAO,CAChBL,KAAMuF,EAAejD,EAAQtC,MAAMK,GAAKL,KACxCiB,MAAOqB,EAAQnC,OAAOE,OAG1CJ,OAAO6G,OAAOE,EAAUlH,GACjBkH,EC9EX,SAASE,EAAWC,EAAKpH,EAAcuC,GAanC,OAZAX,QAAQC,IAAI7B,GACRoH,EAAIxG,eAAeZ,EAAa,MAChCoH,EAAIpH,EAAa,IAAM,IACA,IAAxBA,EAAawC,OACZ4E,EAAIpH,EAAa,IAAIA,EAAa,IAAMuC,EAEnCvC,EAAawC,OAAS,IACvB4E,EAAIpH,EAAa,IAAIY,eAAeZ,EAAa,MACjDoH,EAAIpH,EAAa,IAAIA,EAAa,IAAM,CAACI,OAAQ,KACrDgH,EAAIpH,EAAa,IAAIA,EAAa,IAAlC,OAtBR,SAA0BoH,EAAKpH,EAAcuC,GASzC,OAR2B,IAAxBvC,EAAawC,OACZ4E,EAAIpH,EAAa,IAAMuC,EAClBvC,EAAawC,OAAS,IACvB4E,EAAIxG,eAAeZ,EAAa,MAChCoH,EAAIpH,EAAa,IAAM,CAACI,OAAQ,KACpCgH,EAAIpH,EAAa,IAAjB,OAAiCmH,EAAWC,EAAIpH,EAAa,IAAjB,OAAgCA,EAAaqH,MAAM,GAAI9E,IAEvGX,QAAQC,IAAIuF,GACLA,EAa+CE,CAAiBF,EAAIpH,EAAa,IAAIA,EAAa,IAAlC,OACnEA,EAAaqH,MAAM,GAAI9E,IAEpB6E,EAuBJ,SAASG,EAAS3H,EAAOI,EAAcuC,GAC1C,IAAIiF,EAAUtH,OAAO6G,OAAO,GAAInH,EAAM0B,MAEtCkG,EAAUL,EAAWK,EAASxH,EAtBlC,SAA4BuC,GACxB,IAAIkF,EAAavH,OAAO6G,OAAO,GAAIxE,GAenC,OAdGkF,EAAW7G,eAAe,WACzBV,OAAOC,KAAKsH,EAAWrH,QAAQC,KAAI,SAACC,GAChC,GAAiD,SAA9CkF,EAAeiC,EAAWxH,MAAMK,GAAKL,MACC,iBAA3BwH,EAAWrH,OAAOE,GACxB,IAA4C,IAAzCmH,EAAWrH,OAAOE,GAAKoH,QAAQ,KAC9BD,EAAWrH,OAAOE,GAAOqH,SAASF,EAAWrH,OAAOE,QACnD,CAGD,IAFA,IAAIsH,EAAmBH,EAAWrH,OAAOE,GAAKuH,MAAM,KAChDC,EAAiB,GACbZ,EAAI,EAAGA,EAAIU,EAAiBpF,OAAQ0E,IACxCY,EAAe/F,KAAK4F,SAASC,EAAiBV,KAClDO,EAAWrH,OAAOE,GAAOwH,MAGtCL,EAKUM,CAAmBxF,IAEpC,IAAI0E,EAAW/G,OAAO6G,OAAO,GAAInH,GAEjC,OADAqH,EAAS3F,KAAOkG,EACTtH,OAAO6G,OAAOE,EAAU,CAAC3F,KAAMkG,IAY1C,SAASQ,EAAUC,EAAMC,GAQrB,OAPuB,IAApBA,EAAS1F,eACDyF,EAAKC,EAAS,IACF,IAApBA,EAAS1F,cACDyF,EAAKC,EAAS,IAAIA,EAAS,IAE7BA,EAAS1F,OAAS,IACvByF,EAAKC,EAAS,IAAIA,EAAS,IAA3B,OAhBR,SAASC,EAAgBF,EAAMC,GAK3B,OAJuB,IAApBA,EAAS1F,cACDyF,EAAKC,EAAS,IAChBA,EAAS1F,OAAS,IACvByF,EAAKC,EAAS,IAAd,OAA8BC,EAAgBF,EAAKC,EAAS,IAAd,OAA6BA,EAASb,MAAM,KACvFY,EAWwCE,CAAgBF,EAAKC,EAAS,IAAIA,EAAS,IAA3B,OAA0CA,EAASb,MAAM,KACjHY,EAGJ,SAASG,EAAYxI,EAAOI,GAC/B,IAAIwH,EAAUtH,OAAO6G,OAAO,GAAInH,EAAM0B,MACtCkG,EAAUQ,EAAUR,EAASxH,GAC7B,IAAIiH,EAAW/G,OAAO6G,OAAO,GAAInH,GACjC,OAAOM,OAAO6G,OAAOE,EAAU,CAAC3F,KAAMkG,IAInC,SAASjE,EAAS3D,EAAO2C,GAC5B,IAAI0E,EAAW/G,OAAO6G,OAAO,GAAInH,GAEjC,OADAqH,EAAS3F,KAAOiB,EACT0E,E,YChFLoB,EAAQC,aCPC,WA0BF,IAzBT1I,EAyBQ,uDAzBA,CACJ0B,KACI,CAACiH,EAAG,CACA,EAAK,CACD,KAAQ,OACR,KAAQ,OACR,MAAS,CAAC,KACV,OAAU,CACN,OAAU,GACV,QAAW,IACX,YAAe,EACf,OAAU,EACV,QAAW,EACX,SAAY,EACZ,KAAQ,MAKxBtI,KAAM,OACNsB,MAAO,GACPvB,aAAc,CAAC,IAAK,KACpBO,KAAM,IACNH,OAAQoF,EAAc,MAE1BgD,EAAQ,uCACR,OAAQA,EAAOvI,MACX,IAAK,YACD,OAAOsH,EAAS3H,EAAO4I,EAAOxI,aAAcwI,EAAOjG,SACvD,IAAK,OACD,OAAOgB,EAAS3D,EAAO4I,EAAOjG,SAClC,IAAK,SACD,OAAOsE,EAAejH,EAAO4I,EAAO5D,YACxC,IAAK,OACD,OAAOoC,EAAUpH,EAAO4I,EAAOxI,cACnC,IAAK,SACD,OAAOoI,EAAYxI,EAAO4I,EAAOxI,cACrC,QACI,OAAOJ,KD9Bf6I,YACIC,YAAgBC,OAKxBC,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEJS,SAASC,eAAe,SH2GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4ebb4d79.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class Show extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: 1\r\n        };\r\n        this.presentParams = this.presentParams.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.handleSubmit(\"LOGIN\", user);\r\n    };\r\n\r\n    presentParams = (block, parent_names) => {\r\n        if(block.type === \"sequential\") {\r\n            return <table>\r\n                <tr>\r\n                    <th>Order</th>\r\n                    <th>Type</th>\r\n                    <th>Name</th>\r\n                    <th>Parameters</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                {Object.keys(block.params).map((key) => {\r\n                    return <tr>\r\n                        <th>{key}</th>\r\n                        <th>{block.params[key].type}</th>\r\n                        <th>{block.params[key].name}</th>\r\n                        <th className=\"left_align\">{this.presentParams(block.params[key], parent_names.concat(key))}</th>\r\n                        <th><button type=\"button\" onClick={this.handleManipulate(\"EDIT\",parent_names.concat(key))}>Edit</button></th>\r\n                        <th><button type=\"button\" onClick={this.handleManipulate(\"DELETE\",parent_names.concat(key))}>Delete</button></th>\r\n                    </tr>\r\n                })}\r\n            </table>\r\n        } else {\r\n            if(block.hasOwnProperty(\"params\"))\r\n                return Object.keys(block.params).map((key) => {\r\n                    if(block.params[key] instanceof Array)\r\n                        return <li>{key}: {block.params[key].map((item) => {\r\n                            return <span>{item} </span>\r\n                            })}</li>\r\n                    else\r\n                        return <li>{key}: {block.params[key]}</li>\r\n                })\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleManipulate = (type, parent_names) => (event) => {\r\n        event.preventDefault();\r\n        this.props.handleManipulate(type, parent_names);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n                <div className=\"header\">Model Structure</div>\r\n                <div className=\"sheet\">\r\n                    {Object.keys(this.props.nets).map((key) => {\r\n                        return <div>\r\n                        <h3>Model: {key}</h3>\r\n                            <button type=\"button\" onClick={this.handleManipulate(\"DELETE\", [key])}>Delete</button>\r\n                            <table>\r\n                                <tr>\r\n                                    <th>Order</th>\r\n                                    <th>Type</th>\r\n                                    <th>Name</th>\r\n                                    <th>Input</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            {Object.keys(this.props.nets[key]).map((index) => {\r\n                            const block = this.props.nets[key][index];\r\n                            return <tr>\r\n                                <th>{index}</th>\r\n                                <th>{block.type}</th>\r\n                                <th>{block.name}</th>\r\n                                <th className=\"left_align\">{block.input.map((item) => {\r\n                                    return <li>{item}</li>})}\r\n                                </th>\r\n                                <th className=\"left_align\">{this.presentParams(block, [key, index])}</th>\r\n                                <th><button type=\"button\" onClick={this.handleManipulate(\"EDIT\",[key, index])}>Edit</button></th>\r\n                                <th><button type=\"button\" onClick={this.handleManipulate(\"DELETE\",[key, index])}>Delete</button></th>\r\n                            </tr>\r\n                            })}\r\n                            </table>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {instanceOf} from \"prop-types\";\r\n\r\nexport class Conv extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let params = {};\r\n        if(this.props.hasOwnProperty(\"params\")) {\r\n            Object.keys(this.props.params).map((key) => {\r\n                params[key] = this.props.params[key][\"value\"];\r\n            })\r\n        }\r\n        this.state = {\r\n            parent_names: this.props.parent_names,\r\n            type: this.props.type,\r\n            name: this.props.name,\r\n            input: this.props.input,\r\n            params: params\r\n        };\r\n        this.addAnItem = this.addAnItem.bind(this);\r\n        this.changeAnItem = this.changeAnItem.bind(this);\r\n        this.deleteAnItem = this.deleteAnItem.bind(this);\r\n        this.changeAParam = this.changeAParam.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let params = {};\r\n        if(this.props.hasOwnProperty(\"params\")) {\r\n            Object.keys(this.props.params).map((key) => {\r\n                params[key] = this.props.params[key][\"value\"];\r\n            })\r\n        }\r\n        this.setState({params: params})\r\n    }\r\n\r\n    addAnItem = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.name);\r\n        let newList = this.state[event.target.name];\r\n        newList.push(\"x\");\r\n        this.setState({\r\n            [event.target.name]: newList\r\n        });\r\n    }\r\n\r\n    changeAnItem = (index) => (event) => {\r\n        event.preventDefault();\r\n        let newInput = this.state[event.target.name];\r\n        newInput[index] = event.target.value;\r\n        this.setState({\r\n            [event.target.name]:newInput\r\n        });\r\n    }\r\n\r\n    deleteAnItem = (event) => {\r\n        event.preventDefault();\r\n        let newList = this.state[event.target.name];\r\n        newList.splice(-1,1);\r\n        this.setState({\r\n            [event.target.name]: newList\r\n        });\r\n    }\r\n\r\n    changeAParam = (event) => {\r\n        event.preventDefault();\r\n        let newParam = this.state.params;\r\n        newParam[event.target.name] = event.target.value;\r\n        this.setState({\r\n            param: newParam\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const content = {\r\n            type: this.state.type,\r\n            name: this.state.name,\r\n            input: this.state.input,\r\n            params: this.state.params,\r\n        };\r\n        if(this.state.parent_names.length < 2) {\r\n            this.setState({\r\n                alert: \"You have to specify a parent name!\"\r\n            })\r\n            return 0\r\n        } else\r\n            this.setState({\r\n                alert: \"\"\r\n            })\r\n        let parent_names = this.state.parent_names;\r\n        let flag = 0;\r\n        let nets = this.props.nets;\r\n        for(let key in nets) {\r\n            if(nets.hasOwnProperty(key))\r\n                if(nets[key][\"name\"] === content.name) flag = 1;\r\n        }\r\n\r\n        if(flag === 1)\r\n            this.setState({alert: \"Duplicated name!\"});\r\n        else\r\n            this.props.handleSubmit(\"ADD_BLOCK\", parent_names, content);\r\n\r\n    };\r\n\r\n    onChange = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.name);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <label>{this.props.type}</label>\r\n                    <table>\r\n                    <tr className=\"form-group\">\r\n                        <th><label htmlFor=\"name\">block_name</label></th>\r\n                        <th><input type=\"text\" name=\"name\" id=\"name\" placeholder=\"conv\" value={this.state.name} onChange={this.onChange}/></th>\r\n                    </tr>\r\n                    {this.state.parent_names.map((value, index) => {\r\n                        return <tr className=\"form-group\">\r\n                            <th><label htmlFor=\"parent_names\">parent_name_{index}</label></th>\r\n                            <th><input type=\"text\" name=\"parent_names\" placeholder={value}\r\n                                   onChange={this.changeAnItem(index)}/></th>\r\n                        </tr>\r\n                    })}\r\n                    <tr>\r\n                        <th><button type=\"button\" name=\"parent_names\" onClick={this.addAnItem}>Add a parent name</button></th>\r\n                        <th>\r\n                            {this.state.parent_names.length > 0 &&\r\n                            <button type=\"button\" name=\"parent_names\" onClick={this.deleteAnItem}>Delete a parent name</button>}</th>\r\n                    </tr>\r\n                    {this.state.input.map((value, index) => {\r\n                        return <tr className=\"form-group\">\r\n                            <th><label htmlFor=\"input\">input_{index}</label></th>\r\n                            <th><input type=\"text\" name=\"input\" placeholder={value}\r\n                                       onChange={this.changeAnItem(index)}/></th>\r\n                        </tr>\r\n                    })}\r\n                    <tr>\r\n                        <th><button type=\"button\" name=\"input\" onClick={this.addAnItem}>Add an input</button></th>\r\n                        <th>{this.state.input.length > 0 &&\r\n                        <button type=\"button\" name=\"input\" onClick={this.deleteAnItem}>Delete an input</button>}</th>\r\n                    </tr>\r\n                    {this.props.hasOwnProperty(\"params\") && Object.keys(this.props.params).map((key) =>{\r\n                        if(this.props.params[key].type === \"select\") {\r\n                            return <tr className=\"form-group\">\r\n                                <th><label htmlFor={key}>{key}</label></th>\r\n                                <th><select name={key} id={key} onChange={this.changeAParam}>\r\n                                    {this.props.params[key][\"value\"].map((value) =>\r\n                                        <option value={value}>{value}</option>\r\n                                    )}\r\n                                </select></th>\r\n                            </tr>\r\n                        }\r\n                        else {\r\n                            return <tr className=\"form-group\">\r\n                                <th><label htmlFor={key}>{key}</label></th>\r\n                                <th><input type={this.props.params[key].type} name={key} id={key} placeholder={this.props.params[key].value} value={this.state.params[key]}\r\n                                       onChange={this.changeAParam}/></th>\r\n                            </tr>\r\n                        }\r\n                    })}\r\n                    </table>\r\n                    <div className=\"footer\">\r\n                        <button type=\"submit\" className=\"btn\" id=\"btn-login\">\r\n                            Submit\r\n                        </button>\r\n                        <div className=\"alert\">\r\n                            {this.state.alert}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    }\r\n}","import React from 'react';\nimport {Conv, Show} from \".\";\nimport {Col} from 'react-bootstrap';\nimport Container from \"@material-ui/core/Container\";\n\n\nclass Interface extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFiles = this.handleFiles.bind(this);\n    this.saveHandler = this.saveHandler.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n    receivedText = (e) => {\n      let lines = e.target.result;\n      let rst = JSON.parse(lines);\n      this.props.loadNets(rst);\n  }\n\n  handleFiles = (event) => {\n      let file = event.target.files[0];\n      let fr = new FileReader();\n      fr.onload = this.receivedText;\n      fr.readAsText(file);\n  }\n\n  saveHandler = () => {\n      let content = JSON.stringify(this.props.nets);\n      let blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n      let FileSaver = require('file-saver');\n      FileSaver.saveAs(blob, \"temp.json\");\n  }\n\n  handleSelect = (event) => {\n      event.preventDefault();\n      this.props.handleSelect(event.target.value);\n  };\n\n  render() {\n    return (\n        <div className=\"builder_interface\">\n            model builder - v 0.1\n          <div className=\"builder\">\n              <div className=\"left_panel\">\n                  <Show {...this.props} containerRef={(ref) => this.current = ref} />\n                  <input type=\"file\" id=\"files\" name=\"file\" onChange={this.handleFiles} />\n                  <input type=\"button\" id=\"export\" value=\"save\" onClick={this.saveHandler}/>\n              </div>\n              <div className=\"building_block\">\n                  <div className=\"content\">\n                      <select name=\"type\" onChange={this.handleSelect}>\n                          <option value=\"conv\">Convolution</option>\n                          <option value=\"deconv\">Deconvolution</option>\n                          <option value=\"linear\">Linear</option>\n                          <option value=\"noise\">Noise</option>\n                          <option value=\"AdaIN\">AdaIN</option>\n                          <option value=\"const\">Const</option>\n                          <option value=\"reshape\">Reshape</option>\n                          <option value=\"reparameterize\">Reparameterize</option>\n                          <option value=\"concat\">Concat</option>\n                          <option value=\"normalization\">Normalization</option>\n                          <option value=\"activation\">Activation</option>\n                          <option value=\"sequential\">Sequential</option>\n                      </select>\n                  </div>\n                  <Conv key={this.props.parent_names}\n                        {...this.props}\n                        containerRef={(ref) => this.current = ref} />\n              </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Interface;\n","import Interface from \"./interface\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction containerRef(ref){\r\n    this.current = ref;\r\n}\r\n\r\n// Map Redux state to component props\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        type: state.type,\r\n        nets: state.nets,\r\n        input: state.input,\r\n        parent_names: state.parent_names,\r\n        name: state.name,\r\n        params: state.params\r\n    }\r\n}\r\n\r\n// Map Redux actions to component props\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleSubmit: (type, parent_names, content) => {\r\n            const action = {\r\n                type: type,\r\n                parent_names: parent_names,\r\n                content: content\r\n            };\r\n            dispatch(action);\r\n        },\r\n        loadNets: (content) => {\r\n            const action = {\r\n                type: \"LOAD\",\r\n                content: content\r\n            };\r\n            dispatch(action);\r\n        },\r\n        handleSelect: (block_type) => {\r\n            const action = {\r\n                type: \"SWITCH\",\r\n                block_type: block_type\r\n            };\r\n            dispatch(action);\r\n        },\r\n        handleManipulate: (type, parent_names) => {\r\n            const action = {\r\n                type: type,\r\n                parent_names: parent_names\r\n            }\r\n            dispatch(action)\r\n        },\r\n        containerRef: containerRef,\r\n    }\r\n}\r\n\r\nexport const Landing = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Interface);","import React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport {Landing} from './components/builder/landing';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n        <Router>\n          <div style={{height:'100%'}}>\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n            </Switch>\n          </div>\n        </Router>\n    )\n  }\n}\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const default_params = {\r\n    conv: {\r\n        num_in: {type: \"number\", value: 1},\r\n        num_out: {type: \"number\", value: 1},\r\n        kernel_size: {type: \"text\", value: 3},\r\n        stride: {type: \"text\", value: 1},\r\n        padding: {type: \"text\", value: 1},\r\n        dilation: {type: \"text\", value: 1},\r\n        bias: {type: \"text\", value: 1}\r\n    },\r\n    deconv: {\r\n        num_in: {type: \"number\", value: 1},\r\n        num_out: {type: \"number\", value: 1},\r\n        kernel_size: {type: \"text\", value: 3},\r\n        stride: {type: \"text\", value: 1},\r\n        padding: {type: \"text\", value: 1},\r\n        dilation: {type: \"text\", value: 1},\r\n        output_padding: {type: \"text\", value: 1}\r\n    },\r\n    linear: {\r\n        num_in: {type: \"number\", value: 1},\r\n        num_out: {type: \"number\", value: 1}\r\n    },\r\n    noise: {\r\n        num_in: {type: \"number\", value: 1}\r\n    },\r\n    AdaIN: {\r\n        num_in: {type: \"number\", value: 1},\r\n        num_out: {type: \"number\", value: 1}\r\n    },\r\n    const: {\r\n        num_in: {type: \"number\", value: 1},\r\n        img_size: {type: \"text\", value: [4, 4]}\r\n    },\r\n    reshape: {\r\n        depth: {type: \"text\", value: [-1, 1, 1, 1]}\r\n    },\r\n    concat: {\r\n        axis: {type: \"number\", value: 1}\r\n    },\r\n    normalization: {\r\n        type: {type: \"select\", value: [\"BatchNorm2d\", \"PixelNorm\"]}\r\n    },\r\n    activation: {\r\n        type: {type: \"select\", value: [\"LeakyReLU\", \"Sigmoid\", \"ReLU\"]}\r\n    }\r\n}\r\n\r\nexport function getBlockParams(state, block_type) {\r\n    let allState = Object.assign({}, state);\r\n    allState.type = block_type;\r\n    if(default_params.hasOwnProperty(block_type))\r\n        allState.params = default_params[block_type];\r\n    else\r\n        allState.params = {};\r\n    return allState;\r\n}\r\n\r\nexport function editBlock(state, parent_names) {\r\n    let newState = Object.assign({}, state);\r\n    let content = newState.nets;\r\n    if(parent_names.length < 2)\r\n        return newState;\r\n    for(let i = 0; i < 2; i++) {\r\n        if(content.hasOwnProperty(parent_names[i]))\r\n            content = content[parent_names[i]];\r\n        else\r\n            return newState;\r\n    }\r\n    if(parent_names.length > 2)\r\n        for(let i = 2; i < parent_names.length; i++) {\r\n            if(content.hasOwnProperty(\"params\"))\r\n                if(content.params.hasOwnProperty(parent_names[i]))\r\n                    content = content.params[parent_names[i]];\r\n        }\r\n    let block = {\r\n        \"input\": content.hasOwnProperty(\"input\") ? content[\"input\"] : [],\r\n        \"parent_names\": content.hasOwnProperty(\"parent_names\") ? content[\"parent_names\"] : parent_names,\r\n        \"name\": content.hasOwnProperty(\"name\") ? content[\"name\"] : \"x\",\r\n    }\r\n    if(content.hasOwnProperty(\"type\"))\r\n        block.type = content.type;\r\n        if(content.hasOwnProperty(\"params\"))\r\n            block.params = {}\r\n            if(content.type !== \"sequential\")\r\n                Object.keys(default_params[content.type]).map((key) => {\r\n                    block.params[key] = {\r\n                        type: default_params[content.type][key].type,\r\n                        value: content.params[key]\r\n                    }\r\n                })\r\n    Object.assign(newState, block);\r\n    return newState;\r\n}","import {default_params} from \"./block-params\";\r\n\r\nfunction updateDictParams(net, parent_names, content) {\r\n    if(parent_names.length === 1)\r\n        net[parent_names[0]] = content\r\n    else if (parent_names.length > 1) {\r\n        if(!net.hasOwnProperty(parent_names[0]))\r\n            net[parent_names[0]] = {params: {}}\r\n        net[parent_names[0]][\"params\"] = updateDict(net[parent_names[0]][\"params\"], parent_names.slice(1), content)\r\n    }\r\n    console.log(net);\r\n    return net;\r\n}\r\n\r\nfunction updateDict(net, parent_names, content) {\r\n    console.log(parent_names);\r\n    if(!net.hasOwnProperty(parent_names[0]))\r\n        net[parent_names[0]] = {};\r\n    if(parent_names.length === 2) {\r\n        net[parent_names[0]][parent_names[1]] = content;\r\n    }\r\n    else if (parent_names.length > 2) {\r\n        if(!net[parent_names[0]].hasOwnProperty(parent_names[1]))\r\n            net[parent_names[0]][parent_names[1]] = {params: {}};\r\n        net[parent_names[0]][parent_names[1]][\"params\"] = updateDictParams(net[parent_names[0]][parent_names[1]][\"params\"],\r\n        parent_names.slice(2), content)\r\n    }\r\n    return net;\r\n}\r\n\r\n// This function is used to transform a string of numbers into numbers\r\nfunction validContentParams(content) {\r\n    let newContent = Object.assign({}, content);\r\n    if(newContent.hasOwnProperty(\"params\"))\r\n        Object.keys(newContent.params).map((key) => {\r\n            if(default_params[newContent.type][key].type === \"text\")\r\n                if(typeof(newContent.params[key]) == \"string\")\r\n                    if(newContent.params[key].indexOf(',') === -1)\r\n                        newContent.params[key] = parseInt(newContent.params[key]);\r\n                    else {\r\n                        let content_elements = newContent.params[key].split(',')\r\n                        let update_content = []\r\n                        for(let i = 0; i < content_elements.length; i++)\r\n                            update_content.push(parseInt(content_elements[i]))\r\n                        newContent.params[key] = update_content;\r\n                    }\r\n        })\r\n    return newContent;\r\n}\r\n\r\nexport function addBlock(state, parent_names, content) {\r\n    let allNets = Object.assign({}, state.nets);\r\n    let newContent = validContentParams(content);\r\n    allNets = updateDict(allNets, parent_names, newContent);\r\n    let newState = Object.assign({}, state);\r\n    newState.nets = allNets;\r\n    return Object.assign(newState, {nets: allNets});\r\n}\r\n\r\nfunction deleteKeyParams(dict, key_list) {\r\n    if(key_list.length === 1)\r\n        delete dict[key_list[0]];\r\n    else if (key_list.length > 1)\r\n        dict[key_list[0]][\"params\"] = deleteKeyParams(dict[key_list[0]][\"params\"], key_list.slice(1));\r\n    return dict;\r\n}\r\n\r\n\r\nfunction deleteKey(dict, key_list) {\r\n    if(key_list.length === 1)\r\n        delete dict[key_list[0]];\r\n    if(key_list.length === 2)\r\n        delete dict[key_list[0]][key_list[1]];\r\n\r\n    else if (key_list.length > 2)\r\n        dict[key_list[0]][key_list[1]][\"params\"] = deleteKeyParams(dict[key_list[0]][key_list[1]][\"params\"], key_list.slice(2));\r\n    return dict;\r\n}\r\n\r\nexport function deleteBlock(state, parent_names) {\r\n    let allNets = Object.assign({}, state.nets);\r\n    allNets = deleteKey(allNets, parent_names);\r\n    let newState = Object.assign({}, state);\r\n    return Object.assign(newState, {nets: allNets});\r\n}\r\n\r\n\r\nexport function loadNets(state, content) {\r\n    let newState = Object.assign({}, state);\r\n    newState.nets = content;\r\n    return newState;\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport reducer from './components/reducer/reducer';\nimport thunkMiddleware from 'redux-thunk'\n\nconst store = createStore(\n    reducer,\n    compose(\n        applyMiddleware(thunkMiddleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {addBlock, deleteBlock, loadNets} from \"./actions\";\r\nimport {default_params, editBlock, getBlockParams} from \"./block-params\";\r\n\r\nexport default function reducer(\r\n    state = {\r\n        nets:\r\n            {E: {\r\n                \"1\": {\r\n                    \"type\": \"conv\",\r\n                    \"name\": \"conv\",\r\n                    \"input\": [\"x\"],\r\n                    \"params\": {\r\n                        \"num_in\": 64,\r\n                        \"num_out\": 128,\r\n                        \"kernel_size\": 7,\r\n                        \"stride\": 4,\r\n                        \"padding\": 3,\r\n                        \"dilation\": 1,\r\n                        \"bias\": 0\r\n                    },\r\n                }\r\n            }\r\n        },\r\n        type: \"conv\",\r\n        input: [],\r\n        parent_names: [\"E\", \"1\"],\r\n        name: \"x\",\r\n        params: default_params[\"conv\"]\r\n    },\r\n    action) {\r\n    switch (action.type) {\r\n        case \"ADD_BLOCK\":\r\n            return addBlock(state, action.parent_names, action.content);\r\n        case \"LOAD\":\r\n            return loadNets(state, action.content);\r\n        case \"SWITCH\":\r\n            return getBlockParams(state, action.block_type);\r\n        case \"EDIT\":\r\n            return editBlock(state, action.parent_names);\r\n        case \"DELETE\":\r\n            return deleteBlock(state, action.parent_names);\r\n        default:\r\n            return state;\r\n    }\r\n}"],"sourceRoot":""}