{"version":3,"sources":["components/builder/show.js","components/builder/blocks/conv.js","components/builder/interface.js","components/builder/landing.js","App.js","serviceWorker.js","components/reducer/actions.js","index.js","components/reducer/reducer.js"],"names":["Show","props","handleSubmit","event","preventDefault","user","username","state","password","presentParams","block","type","Object","keys","params","map","key","name","hasOwnProperty","Array","item","onChange","setState","target","value","index","bind","className","this","nets","input","React","Component","Conv","addAnItem","console","log","newList","push","changeAnItem","newInput","deleteAnItem","splice","changeAParam","newParam","param","content","parent_names","flag","alert","onSubmit","htmlFor","id","placeholder","onClick","length","Interface","receivedText","e","lines","result","rst","JSON","parse","loadNets","handleFiles","file","files","fr","FileReader","onload","readAsText","saveHandler","stringify","blob","Blob","require","saveAs","conv_params","num_in","num_out","kernel_size","stride","padding","dilation","bias","Container","Col","containerRef","ref","current","sm","Landing","connect","dispatch","App","style","height","exact","path","component","Boolean","window","location","hostname","match","addBlock","allNets","assign","updateDict","net","name_list","slice","store","createStore","E","action","compose","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAEaA,G,MAAb,kDAEI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAO,CACTC,SAAU,EAAKC,MAAMD,SACrBE,SAAU,EAAKD,MAAMC,UAEzB,EAAKP,MAAMC,aAAa,QAASG,IAhBlB,EAmBnBI,cAAgB,SAACC,GACb,MAAkB,eAAfA,EAAMC,KACE,+BACH,4BACI,qCACA,oCACA,oCACA,0CACA,oCACA,uCAEHC,OAAOC,KAAKH,EAAMI,QAAQC,KAAI,SAACC,GAC5B,OAAO,4BACH,4BAAKA,GACL,4BAAKN,EAAMI,OAAOE,GAAKL,MACvB,4BAAKD,EAAMI,OAAOE,GAAKC,MACvB,4BAAK,EAAKR,cAAcC,EAAMI,OAAOE,KACrC,oCACA,2CAKTN,EAAMQ,eAAe,UACbN,OAAOC,KAAKH,EAAMI,QAAQC,KAAI,SAACC,GAClC,OAAGN,EAAMI,OAAOE,aAAgBG,MACrB,4BAAKH,EAAL,KAAYN,EAAMI,OAAOE,GAAKD,KAAI,SAACK,GACtC,OAAO,8BAAOA,EAAP,SAGJ,4BAAKJ,EAAL,KAAYN,EAAMI,OAAOE,YAP5C,GA1CW,EAsDnBK,SAAW,SAAClB,GACRA,EAAMC,iBACN,EAAKkB,SAAL,eACKnB,EAAMoB,OAAON,KAAOd,EAAMoB,OAAOC,SAvDtC,EAAKjB,MAAQ,CACTkB,MAAO,GAEX,EAAKhB,cAAgB,EAAKA,cAAciB,KAAnB,gBACrB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAKxB,aAAe,EAAKA,aAAawB,KAAlB,gBAPL,EAFvB,qDA+Dc,IAAD,OACL,OAAO,yBAAKC,UAAU,WACd,yBAAKA,UAAU,UAAf,mBACA,yBAAKA,UAAU,SACVf,OAAOC,KAAKe,KAAK3B,MAAM4B,MAAMd,KAAI,SAACC,GAC/B,OAAO,6BACP,sCAAYA,GACR,+BACI,4BACI,qCACA,oCACA,oCACA,qCACA,0CACA,oCACA,uCAEPJ,OAAOC,KAAK,EAAKZ,MAAM4B,KAAKb,IAAMD,KAAI,SAACU,GACxC,IAAMf,EAAQ,EAAKT,MAAM4B,KAAKb,GAAKS,GACnC,OAAO,4BACH,4BAAKA,GACL,4BAAKf,EAAMC,MACX,4BAAKD,EAAMO,MACX,4BAAKP,EAAMoB,MAAMf,KAAI,SAACK,GAClB,OAAO,4BAAKA,OAEhB,4BAAK,EAAKX,cAAcC,IACxB,oCACA,qDA3FhC,GAA0BqB,IAAMC,YCCnBC,EAAb,kDAEI,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAgBViC,UAAY,SAAC/B,GACTA,EAAMC,iBACN+B,QAAQC,IAAIjC,EAAMoB,OAAON,MACzB,IAAIoB,EAAU,EAAK9B,MAAMJ,EAAMoB,OAAON,MACtCoB,EAAQC,KAAK,KACb,EAAKhB,SAAL,eACKnB,EAAMoB,OAAON,KAAOoB,KAvBV,EA2BnBE,aAAe,SAACd,GAAD,OAAW,SAACtB,GACvBA,EAAMC,iBACN,IAAIoC,EAAW,EAAKjC,MAAMJ,EAAMoB,OAAON,MACvCuB,EAASf,GAAStB,EAAMoB,OAAOC,MAC/B,EAAKF,SAAL,eACKnB,EAAMoB,OAAON,KAAMuB,MAhCT,EAoCnBC,aAAe,SAACtC,GACZA,EAAMC,iBACN,IAAIiC,EAAU,EAAK9B,MAAMJ,EAAMoB,OAAON,MACtCoB,EAAQK,QAAQ,EAAE,GAClB,EAAKpB,SAAL,eACKnB,EAAMoB,OAAON,KAAOoB,KAzCV,EA6CnBM,aAAe,SAACxC,GACZA,EAAMC,iBACN,IAAIwC,EAAW,EAAKrC,MAAMO,OAC1B8B,EAASzC,EAAMoB,OAAON,MAAQd,EAAMoB,OAAOC,MAC3C,EAAKF,SAAS,CACVuB,MAAOD,KAlDI,EAsDnB1C,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAM0C,EAAU,CACZnC,KAAM,EAAKJ,MAAMI,KACjBM,KAAM,EAAKV,MAAMU,KACjBa,MAAO,EAAKvB,MAAMuB,MAClBhB,OAAQ,EAAKP,MAAMO,QAEnBiC,EAAe,EAAKxC,MAAMwC,aAE1BC,EAAO,EACPnB,EAAO,EAAK5B,MAAM4B,KAEtB,IAAI,IAAIb,KAAOa,EACRA,EAAKX,eAAeF,IAChBa,EAAKb,GAAL,OAAsB8B,EAAQ7B,OAAM+B,EAAO,GAG1C,IAATA,EACC,EAAK1B,SAAS,CAAC2B,MAAO,qBAEtB,EAAKhD,MAAMC,aAAa,YAAa6C,EAAcD,IA3ExC,EA+EnBzB,SAAW,SAAClB,GACRA,EAAMC,iBAEN,EAAKkB,SAAL,eACKnB,EAAMoB,OAAON,KAAOd,EAAMoB,OAAOC,SAjFtC,EAAKjB,MAAQ,CACTwC,aAAc,EAAK9C,MAAM8C,aACzBpC,KAAM,OACNM,KAAM,OACNa,MAAO,EAAK7B,MAAM6B,MAClBhB,OAAQ,EAAKb,MAAMa,QAEvB,EAAKoB,UAAY,EAAKA,UAAUR,KAAf,gBACjB,EAAKa,aAAe,EAAKA,aAAab,KAAlB,gBACpB,EAAKe,aAAe,EAAKA,aAAaf,KAAlB,gBACpB,EAAKiB,aAAe,EAAKA,aAAajB,KAAlB,gBACpB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAChB,EAAKxB,aAAe,EAAKA,aAAawB,KAAlB,gBAdL,EAFvB,qDAyFc,IAAD,OACL,OAAO,yBAAKC,UAAU,WACd,0BAAMA,UAAU,OAAOuB,SAAUtB,KAAK1B,cAClC,yBAAKyB,UAAU,cACX,2BAAOwB,QAAQ,QAAf,cACA,2BAAOxC,KAAK,OAAOM,KAAK,OAAOmC,GAAG,OAAOC,YAAY,OAAO7B,MAAOI,KAAKrB,MAAMU,KAAMI,SAAUO,KAAKP,YAEtGO,KAAKrB,MAAMwC,aAAahC,KAAI,SAACS,EAAOC,GACjC,OAAO,yBAAKE,UAAU,cAClB,2BAAOwB,QAAQ,gBAAf,eAA2C1B,GAC3C,2BAAOd,KAAK,OAAOM,KAAK,eAAeoC,YAAa7B,EAC7CH,SAAU,EAAKkB,aAAad,SAG3C,4BAAQd,KAAK,SAASM,KAAK,eAAeqC,QAAS1B,KAAKM,WAAxD,qBACCN,KAAKrB,MAAMwC,aAAaQ,OAAS,GAClC,4BAAQ5C,KAAK,SAASM,KAAK,eAAeqC,QAAS1B,KAAKa,cAAxD,wBACCb,KAAKrB,MAAMuB,MAAMf,KAAI,SAACS,EAAOC,GAC1B,OAAO,yBAAKE,UAAU,cAClB,2BAAOwB,QAAQ,SAAf,SAA8B1B,GAC9B,2BAAOd,KAAK,OAAOM,KAAK,QAAQoC,YAAa7B,EACtCH,SAAU,EAAKkB,aAAad,SAG3C,4BAAQd,KAAK,SAASM,KAAK,QAAQqC,QAAS1B,KAAKM,WAAjD,gBACCN,KAAKrB,MAAMuB,MAAMyB,OAAS,GAC3B,4BAAQ5C,KAAK,SAASM,KAAK,QAAQqC,QAAS1B,KAAKa,cAAjD,mBACC7B,OAAOC,KAAKe,KAAKrB,MAAMO,QAAQC,KAAI,SAACC,GACjC,OAAO,yBAAKW,UAAU,cAClB,2BAAOwB,QAASnC,GAAMA,GACtB,2BAAOL,KAAK,OAAOM,KAAMD,EAAKoC,GAAIpC,EAAKqC,YAAa,EAAK9C,MAAMO,OAAOE,GAAMQ,MAAO,EAAKjB,MAAMO,OAAOE,GAC9FK,SAAU,EAAKsB,mBAG9B,yBAAKhB,UAAU,UACX,4BAAQhB,KAAK,SAASgB,UAAU,MAAMyB,GAAG,aAAzC,UAGA,yBAAKzB,UAAU,SACVC,KAAKrB,MAAM0C,cAhIxC,GAA0BlB,IAAMC,W,kBCgGjBwB,E,kDA3Fb,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAoBRwD,aAAe,SAACC,GACZ,IAAIC,EAAQD,EAAEnC,OAAOqC,OACjBC,EAAMC,KAAKC,MAAMJ,GACrB,EAAK1D,MAAM+D,SAASH,IAxBL,EA2BnBI,YAAc,SAAC9D,GACX,IAAI+D,EAAO/D,EAAMoB,OAAO4C,MAAM,GAC1BC,EAAK,IAAIC,WACbD,EAAGE,OAAS,EAAKb,aACjBW,EAAGG,WAAWL,IA/BC,EAkCnBM,YAAc,WACV,IAAI1B,EAAUgB,KAAKW,UAAU,EAAKxE,MAAM4B,MACpC6C,EAAO,IAAIC,KAAK,CAAC7B,GAAU,CAACnC,KAAM,6BACtBiE,EAAQ,IACdC,OAAOH,EAAM,cAtCR,EAyCnBrD,SAAW,SAAClB,GACRA,EAAMC,iBACN,EAAKkB,SAAL,eACKnB,EAAMoB,OAAON,KAAOd,EAAMoB,OAAOC,SA1CxC,EAAKjB,MAAQ,CACTI,KAAM,OACNmB,MAAO,GACPiB,aAAc,CAAC,IAAK,KACpB+B,YAAa,CACXC,OAAQ,EACRC,QAAS,EACTC,YAAa,EACbC,OAAQ,EACRC,QAAS,EACTC,SAAU,EACVC,KAAM,IAGZ,EAAKpB,YAAc,EAAKA,YAAYvC,KAAjB,gBACnB,EAAK8C,YAAc,EAAKA,YAAY9C,KAAjB,gBACnB,EAAKL,SAAW,EAAKA,SAASK,KAAd,gBAlBC,E,qDAgDT,IAAD,OACP,OACI,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,WACX,kBAAC2D,EAAA,EAAD,KACQ,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,iBAAU3D,KAAK3B,MAAf,CAAsBuF,aAAc,SAACC,GAAD,OAAS,EAAKC,QAAUD,MAC5D,2BAAO9E,KAAK,OAAOyC,GAAG,QAAQnC,KAAK,OAAOI,SAAUO,KAAKqC,cACzD,2BAAOtD,KAAK,SAASyC,GAAG,SAAS5B,MAAM,OAAO8B,QAAS1B,KAAK4C,eAEhE,kBAACe,EAAA,EAAD,CAAKI,GAAI,GACL,yBAAKhE,UAAU,kBACX,yBAAKA,UAAU,WACX,4BAAQV,KAAK,OAAOO,MAAOI,KAAKrB,MAAMI,KAAMU,SAAUO,KAAKP,UACvD,4BAAQG,MAAM,QAAd,eACA,4BAAQA,MAAM,UAAd,iBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,cAAd,gBAGS,SAApBI,KAAKrB,MAAMI,MACZ,kBAAC,EAAD,iBAAUiB,KAAK3B,MAAf,CACM8C,aAAcnB,KAAKrB,MAAMwC,aACzBjB,MAAOF,KAAKrB,MAAMuB,MAClBhB,OAAQc,KAAKrB,MAAMuE,YACnBU,aAAc,SAACC,GAAD,OAAS,EAAKC,QAAUD,e,GAnF9C1D,IAAMC,W,QCH9B,SAASwD,EAAaC,GAClB7D,KAAK8D,QAAUD,EAiCZ,IAAMG,EAAUC,aA7BvB,SAAyBtF,GACrB,MAAO,CACHI,KAAMJ,EAAMI,KACZkB,KAAMtB,EAAMsB,SAKpB,SAA4BiE,GACxB,MAAO,CACH5F,aAAc,SAACS,EAAMoC,EAAcD,GAM/BgD,EALe,CACXnF,KAAMA,EACNoC,aAAcA,EACdD,QAASA,KAIjBkB,SAAU,SAAClB,GAKPgD,EAJe,CACXnF,KAAM,OACNmC,QAASA,KAIjB0C,aAAcA,KAICK,CAGrBrC,G,eCVauC,E,uKAjBX,OACI,kBAAC,IAAD,KACE,yBAAKC,MAAO,CAACC,OAAO,SAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,W,GAP7B7D,IAAMC,WCEJqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCRC,SAASC,EAASnG,EAAOwC,EAAcD,GAC1C,IAAI6D,EAAU/F,OAAOgG,OAAO,GAAIrG,EAAMsB,MAGtC,OADA8E,EAbJ,SAASE,EAAWC,EAAKC,EAAWjE,GAKhC,OAJwB,IAArBiE,EAAUxD,OACTuD,EAAIC,EAAU,IAAMjE,EAEpBgE,EAAIC,EAAU,IAAMF,EAAWC,EAAIC,EAAU,IAAKA,EAAUC,MAAM,GAAIlE,GACnEgE,EAQGD,CAAWF,EAAS5D,EAAcD,GACrC,CACHnC,KAAMJ,EAAMI,KACZkB,KAAM8E,GAIP,SAAS3C,EAASzD,EAAOuC,GAC5B,MAAO,CACHnC,KAAMJ,EAAMI,KACZkB,KAAMiB,G,YCbRmE,EAAQC,aCRC,WAsBF,IArBT3G,EAqBQ,uDArBA,CACJI,KAAM,OACNkB,KACI,CAACsF,EAAG,CACA,EAAK,CACD,KAAQ,OACR,KAAQ,OACR,MAAS,CAAC,KACV,OAAU,CACN,OAAU,GACV,QAAW,IACX,YAAe,EACf,OAAU,EACV,QAAW,EACX,SAAY,EACZ,KAAQ,OAM5BC,EAAQ,uCACR,OAAQA,EAAOzG,MACX,IAAK,YACD,OAAO+F,EAASnG,EAAO6G,EAAOrE,aAAcqE,EAAOtE,SACvD,IAAK,OACD,OAAOkB,EAASzD,EAAO6G,EAAOtE,SAClC,QACI,OAAOvC,KDnBf8G,YACIC,YAAgBC,KAChBjB,OAAOkB,8BAAgClB,OAAOkB,iCAItDC,IAASC,OACL,kBAAC,IAAD,CAAUT,MAAOA,GACb,kBAAC,EAAD,OAEJU,SAASC,eAAe,SF2GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3b523d86.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class Show extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: 1\r\n        };\r\n        this.presentParams = this.presentParams.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.handleSubmit(\"LOGIN\", user);\r\n    };\r\n\r\n    presentParams = (block) => {\r\n        if(block.type === \"sequential\") {\r\n            return <table>\r\n                <tr>\r\n                    <th>Order</th>\r\n                    <th>Type</th>\r\n                    <th>Name</th>\r\n                    <th>Parameters</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                {Object.keys(block.params).map((key) => {\r\n                    return <tr>\r\n                        <th>{key}</th>\r\n                        <th>{block.params[key].type}</th>\r\n                        <th>{block.params[key].name}</th>\r\n                        <th>{this.presentParams(block.params[key])}</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                })}\r\n            </table>\r\n        } else {\r\n            if(block.hasOwnProperty(\"params\"))\r\n                return Object.keys(block.params).map((key) => {\r\n                    if(block.params[key] instanceof Array)\r\n                        return <li>{key}: {block.params[key].map((item) => {\r\n                            return <span>{item} </span>\r\n                            })}</li>\r\n                    else\r\n                        return <li>{key}: {block.params[key]}</li>\r\n                })\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n                <div className=\"header\">Model Structure</div>\r\n                <div className=\"sheet\">\r\n                    {Object.keys(this.props.nets).map((key) => {\r\n                        return <div>\r\n                        <h3>Model: {key}</h3>\r\n                            <table>\r\n                                <tr>\r\n                                    <th>Order</th>\r\n                                    <th>Type</th>\r\n                                    <th>Name</th>\r\n                                    <th>Input</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            {Object.keys(this.props.nets[key]).map((index) => {\r\n                            const block = this.props.nets[key][index];\r\n                            return <tr>\r\n                                <th>{index}</th>\r\n                                <th>{block.type}</th>\r\n                                <th>{block.name}</th>\r\n                                <th>{block.input.map((item) => {\r\n                                    return <li>{item}</li>})}\r\n                                </th>\r\n                                <th>{this.presentParams(block)}</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                            })}\r\n                            </table>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n    }\r\n}","import React from \"react\";\r\nimport {instanceOf} from \"prop-types\";\r\n\r\nexport class Conv extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            parent_names: this.props.parent_names,\r\n            type: \"conv\",\r\n            name: \"conv\",\r\n            input: this.props.input,\r\n            params: this.props.params\r\n        };\r\n        this.addAnItem = this.addAnItem.bind(this);\r\n        this.changeAnItem = this.changeAnItem.bind(this);\r\n        this.deleteAnItem = this.deleteAnItem.bind(this);\r\n        this.changeAParam = this.changeAParam.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    addAnItem = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.name);\r\n        let newList = this.state[event.target.name];\r\n        newList.push(\"x\");\r\n        this.setState({\r\n            [event.target.name]: newList\r\n        });\r\n    }\r\n\r\n    changeAnItem = (index) => (event) => {\r\n        event.preventDefault();\r\n        let newInput = this.state[event.target.name];\r\n        newInput[index] = event.target.value;\r\n        this.setState({\r\n            [event.target.name]:newInput\r\n        });\r\n    }\r\n\r\n    deleteAnItem = (event) => {\r\n        event.preventDefault();\r\n        let newList = this.state[event.target.name];\r\n        newList.splice(-1,1);\r\n        this.setState({\r\n            [event.target.name]: newList\r\n        });\r\n    }\r\n\r\n    changeAParam = (event) => {\r\n        event.preventDefault();\r\n        let newParam = this.state.params;\r\n        newParam[event.target.name] = event.target.value;\r\n        this.setState({\r\n            param: newParam\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const content = {\r\n            type: this.state.type,\r\n            name: this.state.name,\r\n            input: this.state.input,\r\n            params: this.state.params\r\n        };\r\n        let parent_names = this.state.parent_names;\r\n\r\n        let flag = 0;\r\n        let nets = this.props.nets;\r\n\r\n        for(let key in nets) {\r\n            if(nets.hasOwnProperty(key))\r\n                if(nets[key][\"name\"] === content.name) flag = 1;\r\n        }\r\n\r\n        if(flag === 1)\r\n            this.setState({alert: \"Duplicated name!\"});\r\n        else\r\n            this.props.handleSubmit(\"ADD_BLOCK\", parent_names, content);\r\n\r\n    };\r\n\r\n    onChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"content\">\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">block_name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"conv\" value={this.state.name} onChange={this.onChange}/>\r\n                    </div>\r\n                    {this.state.parent_names.map((value, index) => {\r\n                        return <div className=\"form-group\">\r\n                            <label htmlFor=\"parent_names\">parent_name_{index}</label>\r\n                            <input type=\"text\" name=\"parent_names\" placeholder={value}\r\n                                   onChange={this.changeAnItem(index)}/>\r\n                        </div>\r\n                    })}\r\n                    <button type=\"button\" name=\"parent_names\" onClick={this.addAnItem}>Add a parent name</button>\r\n                    {this.state.parent_names.length > 0 &&\r\n                    <button type=\"button\" name=\"parent_names\" onClick={this.deleteAnItem}>Delete a parent name</button>}\r\n                    {this.state.input.map((value, index) => {\r\n                        return <div className=\"form-group\">\r\n                            <label htmlFor=\"input\">input_{index}</label>\r\n                            <input type=\"text\" name=\"input\" placeholder={value}\r\n                                   onChange={this.changeAnItem(index)}/>\r\n                        </div>\r\n                    })}\r\n                    <button type=\"button\" name=\"input\" onClick={this.addAnItem}>Add an input</button>\r\n                    {this.state.input.length > 0 &&\r\n                    <button type=\"button\" name=\"input\" onClick={this.deleteAnItem}>Delete an input</button>}\r\n                    {Object.keys(this.state.params).map((key) =>{\r\n                        return <div className=\"form-group\">\r\n                            <label htmlFor={key}>{key}</label>\r\n                            <input type=\"text\" name={key} id={key} placeholder={this.state.params[key]} value={this.state.params[key]}\r\n                                   onChange={this.changeAParam}/>\r\n                        </div>\r\n                    })}\r\n                    <div className=\"footer\">\r\n                        <button type=\"submit\" className=\"btn\" id=\"btn-login\">\r\n                            Submit\r\n                        </button>\r\n                        <div className=\"alert\">\r\n                            {this.state.alert}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    }\r\n}","import React from 'react';\nimport {Conv, Show} from \".\";\nimport {Col} from 'react-bootstrap';\nimport Container from \"@material-ui/core/Container\";\n\n\nclass Interface extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        type: \"conv\",\n        input: [],\n        parent_names: [\"E\", \"2\"],\n        conv_params: {\n          num_in: 1,\n          num_out: 1,\n          kernel_size: 3,\n          stride: 1,\n          padding: 1,\n          dilation: 1,\n          bias: 0\n        }\n    }\n    this.handleFiles = this.handleFiles.bind(this);\n    this.saveHandler = this.saveHandler.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  receivedText = (e) => {\n      let lines = e.target.result;\n      let rst = JSON.parse(lines);\n      this.props.loadNets(rst);\n  }\n\n  handleFiles = (event) => {\n      let file = event.target.files[0];\n      let fr = new FileReader();\n      fr.onload = this.receivedText;\n      fr.readAsText(file);\n  }\n\n  saveHandler = () => {\n      let content = JSON.stringify(this.props.nets);\n      let blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n      let FileSaver = require('file-saver');\n      FileSaver.saveAs(blob, \"temp.json\");\n  }\n\n  onChange = (event) => {\n      event.preventDefault();\n      this.setState({\n          [event.target.name]: event.target.value\n      });\n  };\n\n  render() {\n    return (\n        <div className=\"builder_interface\">\n          <div className=\"builder\">\n              <Container>\n                      <Col>\n                          <Show {...this.props} containerRef={(ref) => this.current = ref} />\n                          <input type=\"file\" id=\"files\" name=\"file\" onChange={this.handleFiles} />\n                          <input type=\"button\" id=\"export\" value=\"save\" onClick={this.saveHandler}/>\n                      </Col>\n                      <Col sm={3}>\n                          <div className=\"building_block\">\n                              <div className=\"content\">\n                                  <select name=\"type\" value={this.state.type} onChange={this.onChange}>\n                                      <option value=\"conv\">Convolution</option>\n                                      <option value=\"deconv\">Deconvolution</option>\n                                      <option value=\"linear\">Linear</option>\n                                      <option value=\"noise\">Noise</option>\n                                      <option value=\"AdaIN\">AdaIN</option>\n                                      <option value=\"const\">Const</option>\n                                      <option value=\"reshape\">Reshape</option>\n                                      <option value=\"reparameterize\">Reparameterize</option>\n                                      <option value=\"concat\">Concat</option>\n                                      <option value=\"normalization\">Normalization</option>\n                                      <option value=\"activation\">Activation</option>\n                                      <option value=\"sequential\">Sequential</option>\n                                  </select>\n                              </div>\n                          {this.state.type === \"conv\" &&\n                          <Conv {...this.props}\n                                parent_names={this.state.parent_names}\n                                input={this.state.input}\n                                params={this.state.conv_params}\n                                containerRef={(ref) => this.current = ref} />}\n                          </div>\n                      </Col>\n              </Container>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Interface;\n","import Interface from \"./interface\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction containerRef(ref){\r\n    this.current = ref;\r\n}\r\n\r\n// Map Redux state to component props\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        type: state.type,\r\n        nets: state.nets\r\n    }\r\n}\r\n\r\n// Map Redux actions to component props\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleSubmit: (type, parent_names, content) => {\r\n            const action = {\r\n                type: type,\r\n                parent_names: parent_names,\r\n                content: content\r\n            };\r\n            dispatch(action);\r\n        },\r\n        loadNets: (content) => {\r\n            const action = {\r\n                type: \"LOAD\",\r\n                content: content\r\n            };\r\n            dispatch(action);\r\n        },\r\n        containerRef: containerRef,\r\n    }\r\n}\r\n\r\nexport const Landing = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Interface);","import React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport {Landing} from './components/builder/landing';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n        <Router>\n          <div style={{height:'100%'}}>\n            <Switch>\n              <Route exact path=\"/\" component={Landing} />\n            </Switch>\n          </div>\n        </Router>\n    )\n  }\n}\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function updateDict(net, name_list, content) {\r\n    if(name_list.length === 1)\r\n        net[name_list[0]] = content\r\n    else\r\n        net[name_list[0]] = updateDict(net[name_list[0]], name_list.slice(1), content)\r\n    return net\r\n}\r\n\r\n\r\n\r\nexport function addBlock(state, parent_names, content) {\r\n    let allNets = Object.assign({}, state.nets);\r\n\r\n    allNets = updateDict(allNets, parent_names, content);\r\n    return {\r\n        type: state.type,\r\n        nets: allNets\r\n    };\r\n}\r\n\r\nexport function loadNets(state, content) {\r\n    return {\r\n        type: state.type,\r\n        nets: content\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport reducer from './components/reducer/reducer';\nimport thunkMiddleware from 'redux-thunk'\n\nconst store = createStore(\n    reducer,\n    compose(\n        applyMiddleware(thunkMiddleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {addBlock, loadNets} from \"./actions\";\r\n\r\nexport default function reducer(\r\n    state = {\r\n        type: \"conv\",\r\n        nets:\r\n            {E: {\r\n                \"1\": {\r\n                    \"type\": \"conv\",\r\n                    \"name\": \"conv\",\r\n                    \"input\": [\"x\"],\r\n                    \"params\": {\r\n                        \"num_in\": 64,\r\n                        \"num_out\": 128,\r\n                        \"kernel_size\": 7,\r\n                        \"stride\": 4,\r\n                        \"padding\": 3,\r\n                        \"dilation\": 1,\r\n                        \"bias\": 0\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    },\r\n    action) {\r\n    switch (action.type) {\r\n        case \"ADD_BLOCK\":\r\n            return addBlock(state, action.parent_names, action.content);\r\n        case \"LOAD\":\r\n            return loadNets(state, action.content);\r\n        default:\r\n            return state;\r\n    }\r\n}"],"sourceRoot":""}